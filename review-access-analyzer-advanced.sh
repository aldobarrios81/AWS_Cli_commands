#!/usr/bin/env bash
set -euo pipefail

# Variables de configuraci√≥n
PROVIDER="AWS"
REGION="us-east-1"
PROFILE="azcenit"

echo "=== AN√ÅLISIS AVANZADO DE IAM ACCESS ANALYZER FINDINGS ==="
echo "Proveedor: $PROVIDER"
echo "Regi√≥n: $REGION"  
echo "Perfil: $PROFILE"
echo "Fecha: $(date)"
echo

# Obtener analyzer existente autom√°ticamente
echo "üîç Detectando analyzer de Access Analyzer..."
ANALYZER_ARN=$(wsl aws accessanalyzer list-analyzers \
    --region "$REGION" \
    --profile "$PROFILE" \
    --query "analyzers[0].arn" \
    --output text 2>/dev/null || echo "None")

if [ "$ANALYZER_ARN" = "None" ] || [ -z "$ANALYZER_ARN" ]; then
    echo "‚ùå Error: No se encontr√≥ ning√∫n analyzer de Access Analyzer."
    echo "   Ejecuta primero: ./enable-iam-access-analyzer-improved.sh"
    exit 1
fi

ANALYZER_NAME=$(wsl aws accessanalyzer list-analyzers \
    --region "$REGION" \
    --profile "$PROFILE" \
    --query "analyzers[0].name" \
    --output text 2>/dev/null)

echo "‚úî Analyzer: $ANALYZER_NAME"
echo "‚úî ARN: $ANALYZER_ARN"

# Funci√≥n para contar findings por filtro
count_findings() {
    local filter="$1"
    wsl aws accessanalyzer list-findings \
        --analyzer-arn "$ANALYZER_ARN" \
        --filter "$filter" \
        --region "$REGION" \
        --profile "$PROFILE" \
        --query 'length(findings)' \
        --output text 2>/dev/null || echo "0"
}

# Funci√≥n para listar findings con detalles
list_findings_detailed() {
    local filter="$1"
    local title="$2"
    local count=$(count_findings "$filter")
    
    if [ "$count" -gt 0 ]; then
        echo
        echo "=== $title ($count findings) ==="
        wsl aws accessanalyzer list-findings \
            --analyzer-arn "$ANALYZER_ARN" \
            --filter "$filter" \
            --region "$REGION" \
            --profile "$PROFILE" \
            --query 'findings[].[id,resourceType,condition,status,createdAt]' \
            --output table 2>/dev/null || echo "Error obteniendo detalles"
    fi
}

echo
echo "üìä RESUMEN EJECUTIVO DE FINDINGS"
echo "================================="

# Estad√≠sticas generales
total_findings=$(count_findings '{}')
active_findings=$(count_findings '{"status":{"eq":["ACTIVE"]}}')
archived_findings=$(count_findings '{"status":{"eq":["ARCHIVED"]}}')

echo "üìà Total de findings: $total_findings"
echo "üö® Findings ACTIVOS: $active_findings"
echo "üìÅ Findings ARCHIVADOS: $archived_findings"

# Si no hay findings, mostrar mensaje y salir
if [ "$total_findings" -eq 0 ]; then
    echo
    echo "‚úÖ ¬°CONFIGURACI√ìN PERFECTA!"
    echo
    echo "   üéØ Estado de Seguridad: √ìPTIMO"
    echo "   üîí No hay accesos externos detectados"
    echo "   ‚ú® Todas las pol√≠ticas est√°n correctamente configuradas"
    echo
    echo "   üí° Recomendaciones:"
    echo "   ‚Ä¢ Contin√∫a monitoreando regularmente"
    echo "   ‚Ä¢ Mant√©n las mejores pr√°cticas actuales"
    echo "   ‚Ä¢ Revisa este an√°lisis mensualmente"
    echo
    exit 0
fi

echo
echo "üîç AN√ÅLISIS DETALLADO POR ESTADO"
echo "================================"

# Findings activos (cr√≠ticos)
if [ "$active_findings" -gt 0 ]; then
    echo
    echo "üö® FINDINGS ACTIVOS - REQUIEREN ATENCI√ìN INMEDIATA"
    list_findings_detailed '{"status":{"eq":["ACTIVE"]}}' "FINDINGS ACTIVOS"
    
    echo
    echo "üö® PLAN DE ACCI√ìN INMEDIATA:"
    echo "1. üîç Investiga cada finding activo individualmente"
    echo "2. ü§î Determina si el acceso es leg√≠timo o no deseado"
    echo "3. ‚ö° Si NO es leg√≠timo: REVOCA permisos INMEDIATAMENTE"
    echo "4. üìù Si ES leg√≠timo: Documenta justificaci√≥n y archiva"
    echo "5. üîê Implementa controles preventivos adicionales"
fi

# Findings archivados (informativos)
if [ "$archived_findings" -gt 0 ]; then
    list_findings_detailed '{"status":{"eq":["ARCHIVED"]}}' "FINDINGS ARCHIVADOS (Revisados)"
fi

echo
echo "üìã AN√ÅLISIS POR TIPO DE RECURSO"
echo "==============================="

# Array de tipos de recursos
declare -a resource_types=(
    "AWS::S3::Bucket:S3 Buckets"
    "AWS::IAM::Role:IAM Roles"  
    "AWS::KMS::Key:KMS Keys"
    "AWS::Lambda::Function:Lambda Functions"
    "AWS::SQS::Queue:SQS Queues"
    "AWS::SecretsManager::Secret:Secrets Manager"
    "AWS::EFS::FileSystem:EFS File Systems"
    "AWS::ECR::Repository:ECR Repositories"
    "AWS::RDS::DBSnapshot:RDS Snapshots"
    "AWS::SNS::Topic:SNS Topics"
)

for item in "${resource_types[@]}"; do
    resource_type="${item%%:*}"
    display_name="${item##*:}"
    
    total=$(count_findings "{\"resourceType\":{\"eq\":[\"$resource_type\"]}}")
    active=$(count_findings "{\"resourceType\":{\"eq\":[\"$resource_type\"]},\"status\":{\"eq\":[\"ACTIVE\"]}}")
    
    if [ "$total" -gt 0 ]; then
        echo "üîπ $display_name: $total total ($active activos)"
        
        if [ "$active" -gt 0 ]; then
            echo "   ‚ö†Ô∏è  ATENCI√ìN: $active findings activos requieren revisi√≥n"
        fi
    fi
done

echo
echo "üéØ AN√ÅLISIS DE RIESGO"
echo "===================="

if [ "$active_findings" -gt 0 ]; then
    echo "üî¥ NIVEL DE RIESGO: ALTO"
    echo "   ‚Ä¢ $active_findings recursos con acceso externo activo"
    echo "   ‚Ä¢ Requiere acci√≥n inmediata"
    echo "   ‚Ä¢ Revisar y corregir en las pr√≥ximas 24 horas"
elif [ "$archived_findings" -gt 0 ]; then
    echo "üü° NIVEL DE RIESGO: BAJO"
    echo "   ‚Ä¢ Solo findings archivados (ya revisados)"
    echo "   ‚Ä¢ Monitoreo continuo recomendado"
else
    echo "üü¢ NIVEL DE RIESGO: M√çNIMO"
    echo "   ‚Ä¢ Sin accesos externos detectados"
    echo "   ‚Ä¢ Configuraci√≥n de seguridad √≥ptima"
fi

echo
echo "üìà M√âTRICAS DE CUMPLIMIENTO"
echo "=========================="

compliance_score=100
if [ "$active_findings" -gt 0 ]; then
    compliance_score=$((100 - (active_findings * 10)))
    if [ $compliance_score -lt 0 ]; then
        compliance_score=0
    fi
fi

echo "üéØ Puntuaci√≥n de Cumplimiento: $compliance_score/100"

if [ $compliance_score -eq 100 ]; then
    echo "   ‚úÖ EXCELENTE - Cumplimiento perfecto"
elif [ $compliance_score -ge 80 ]; then
    echo "   üü° BUENO - Algunos elementos por revisar"
elif [ $compliance_score -ge 60 ]; then
    echo "   üü† REGULAR - Requiere atenci√≥n"
else
    echo "   üî¥ CR√çTICO - Acci√≥n inmediata requerida"
fi

echo
echo "üí° RECOMENDACIONES ESPEC√çFICAS"
echo "============================="

if [ "$active_findings" -gt 0 ]; then
    echo "üö® INMEDIATAS (24-48 horas):"
    echo "   ‚Ä¢ Revisar todos los findings activos"
    echo "   ‚Ä¢ Validar legitimidad de accesos externos"
    echo "   ‚Ä¢ Revocar permisos no autorizados"
    echo "   ‚Ä¢ Documentar excepciones aprobadas"
fi

echo "üîÑ OPERACIONALES (semanales):"
echo "   ‚Ä¢ Ejecutar este an√°lisis semanalmente"
echo "   ‚Ä¢ Monitorear nuevos findings"
echo "   ‚Ä¢ Revisar findings archivados mensualmente"

echo "üõ°Ô∏è  PREVENTIVAS (continuas):"
echo "   ‚Ä¢ Implementar least privilege"
echo "   ‚Ä¢ Usar roles temporales cuando sea posible"
echo "   ‚Ä¢ Configurar alertas autom√°ticas"
echo "   ‚Ä¢ Entrenar al equipo en mejores pr√°cticas"

echo
echo "üîß COMANDOS √öTILES PARA INVESTIGACI√ìN"
echo "====================================="

if [ "$active_findings" -gt 0 ]; then
    echo "# Listar IDs de findings activos:"
    echo "wsl aws accessanalyzer list-findings \\"
    echo "    --analyzer-arn '$ANALYZER_ARN' \\"
    echo "    --filter '{\"status\":{\"eq\":[\"ACTIVE\"]}}' \\"
    echo "    --query 'findings[].id' \\"
    echo "    --region $REGION --profile $PROFILE"
    echo
    echo "# Ver detalles completos de un finding:"
    echo "wsl aws accessanalyzer get-finding \\"
    echo "    --analyzer-arn '$ANALYZER_ARN' \\"
    echo "    --id '<FINDING-ID>' \\"
    echo "    --region $REGION --profile $PROFILE"
    echo
    echo "# Archivar un finding despu√©s de revisi√≥n:"
    echo "wsl aws accessanalyzer update-findings \\"
    echo "    --analyzer-arn '$ANALYZER_ARN' \\"
    echo "    --ids '<FINDING-ID>' \\"
    echo "    --status ARCHIVED \\"
    echo "    --region $REGION --profile $PROFILE"
fi

echo
echo "üìä PR√ìXIMA REVISI√ìN PROGRAMADA"
echo "=============================="
next_review=$(date -d "+1 week" "+%Y-%m-%d %H:%M")
echo "üìÖ Fecha sugerida: $next_review"
echo "üîî Configura un recordatorio para ejecutar este an√°lisis"

echo
echo "‚è∞ An√°lisis completado: $(date)"
echo "üéØ Estado: REVISI√ìN COMPLETA"
echo "=============================================="